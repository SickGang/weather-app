{"version":3,"sources":["logo.svg","components/Weather.js","App.js","index.js"],"names":["Weather","useState","data","setData","inputValue","setInputValue","className","type","placeholder","aria-label","aria-describedby","value","onChange","event","target","onClick","city","fetch","then","response","json","error","console","log","cod","name","src","weather","icon","Math","round","main","temp","feels_like","humidity","pressure","wind","speed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAAe,I,kBCoGAA,MAlGf,WAAoB,IAAD,EACOC,oBAAS,GADhB,mBACVC,EADU,KACJC,EADI,OAEmBF,mBAAS,IAF5B,mBAEVG,EAFU,KAEEC,EAFF,KAwBjB,OACE,mCACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACE,+BACE,sBAAKA,UAAU,mBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,eACVE,YAAY,iCACZC,aAAW,iCACXC,mBAAiB,eACjBC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAWR,EAAcQ,EAAMC,OAAOH,UAElD,qBAAKL,UAAU,qBAAf,SACE,wBACEA,UAAU,4BACVC,KAAK,SACLQ,QAAS,kBArCVC,EAqCsBZ,EApCnCC,EAAc,SACD,KAATW,GACFC,MAAM,GAAD,OALI,kDAKJ,cAAcD,EAAd,0BAJM,qCAKRE,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MACC,SAAChB,GACCC,EAAQD,MAEV,SAACmB,GACCC,QAAQC,IAAIF,OAZtB,IAAeL,GAkCD,mDAUG,GAARd,EACC,sBAAMI,UAAU,OAAhB,qOAGc,KAAZJ,EAAKsB,IACP,sBAAMlB,UAAU,OAAhB,gMAEA,sBAAKA,UAAW,gBAA0B,IAARJ,GAAc,SAAhD,UACE,qBAAKI,UAAU,oBAAf,SAAoCJ,EAAKuB,OACzC,sBAAKnB,UAAU,sBAAf,UACE,qBACEA,UAAU,oBACVoB,IAAG,gBAAWxB,EAAKyB,QAAQ,GAAGC,KAA3B,UAEJC,KAAKC,MAAM5B,EAAK6B,KAAKC,KAAO,QAL/B,WAOA,sBAAK1B,UAAU,4BAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,6GACA,iCACGuB,KAAKC,MAAM5B,EAAK6B,KAAKE,WAAa,QADrC,cAIF,sBAAK3B,UAAU,8BAAf,UACE,0FACA,iCAAOJ,EAAK6B,KAAKG,SAAjB,cAGJ,sBAAK5B,UAAU,sBAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,oFACA,iCAAOJ,EAAK6B,KAAKI,SAAjB,gDAEF,sBAAK7B,UAAU,8BAAf,UACE,kEACA,iCAAOuB,KAAKC,MAAM5B,EAAKkC,KAAKC,OAA5B,wCCjFLC,MAJf,WACE,OAAO,cAAC,EAAD,KCATC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e66b0fbd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react, { useState } from \"react\";\r\n\r\nfunction Weather() {\r\n  const [data, setData] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const link = \"https://api.openweathermap.org/data/2.5/weather\";\r\n  const apiKey = \"d4d3354a520b51accfd46a71feaee1d4\";\r\n  function query(city) {\r\n    setInputValue(\"\");\r\n    if (city !== \"\") {\r\n      fetch(`${link}?q=${city}&lang=ru&appid=${apiKey}`)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then(\r\n          (data) => {\r\n            setData(data);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"weather\">\r\n          <form>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Город\"\r\n                aria-label=\"Город\"\r\n                aria-describedby=\"basic-addon2\"\r\n                value={inputValue}\r\n                onChange={(event) => setInputValue(event.target.value)}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  className=\"btn btn-outline-secondary\"\r\n                  type=\"button\"\r\n                  onClick={() => query(inputValue)}\r\n                >\r\n                  Найти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          {data == false ? (\r\n            <span className=\"text\">\r\n              Введите название города на русском языке\r\n            </span>\r\n          ) : data.cod == 404 ? (\r\n            <span className=\"text\">Вы ввели неверное название города</span>\r\n          ) : (\r\n            <div className={\"weather-info\" + (data != \"\" && \" show\")}>\r\n              <div className=\"weather-info_city\">{data.name}</div>\r\n              <div className=\"weather-info_degree\">\r\n                <img\r\n                  className=\"weather-info_icon\"\r\n                  src={`/icon/${data.weather[0].icon}.png`}\r\n                />\r\n                {Math.round(data.main.temp - 273.15)} &#176;\r\n              </div>\r\n              <div className=\"weather-info_info-wrapper\">\r\n                <div className=\"weather-info_column\">\r\n                  <div className=\"weather-info_column-content\">\r\n                    <span>Ощущается как</span>\r\n                    <span>\r\n                      {Math.round(data.main.feels_like - 273.15)} &#176;\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"weather-info_column-content\">\r\n                    <span>Влажность</span>\r\n                    <span>{data.main.humidity} %</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"weather-info_column\">\r\n                  <div className=\"weather-info_column-content\">\r\n                    <span>Давление</span>\r\n                    <span>{data.main.pressure} мм рт ст</span>\r\n                  </div>\r\n                  <div className=\"weather-info_column-content\">\r\n                    <span>Ветер</span>\r\n                    <span>{Math.round(data.wind.speed)} м/с</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Weather from \"./components/Weather\";\nfunction App() {\n  return <Weather />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}